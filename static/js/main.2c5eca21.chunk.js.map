{"version":3,"sources":["App/reducer.js","App/provider.js","components/Heading/index.js","components/Description/index.js","components/Card/index.js","components/Loading/index.js","components/LoadMore/index.js","components/DropdownList/index.js","components/ThemeControl/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["UPDATE_THEME","RESET_THEME","initialState","fontFamily","undefined","heading","fontColor","fontSize","description","card","primary","secondary","tertiary","reducer","state","action","type","config","AppContext","createContext","AppProvider","props","children","useReducer","dispatch","actions","updateTheme","resetTheme","Provider","value","Heading","className","useContext","style","Description","Card","date","link","index","columnNo","getFlag","cardStyleModifier","href","target","rel","propType","PropTypes","array","string","number","Loading","role","LoadMore","addCardToArrayCallback","useState","response","setResponse","prevResponseStatus","useRef","onLoadMoreSuccessCallback","useCallback","current","status","data","title","body","useEffect","onClick","e","preventDefault","randomNumber","Math","random","axios","get","then","error","propTypes","func","DropdownList","list","callback","label","open","setOpen","dropdownRef","prevOpen","clickAwayCallback","contains","onOpenDropdownCallback","document","addEventListener","onCloseDropdownCallback","removeEventListener","ref","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","length","map","item","renderList","ThemeControl","onReset","onClose","renderHTML","renderFontFamilyStyle","ThemeConfig","headingFontSize","descriptionFontSize","cardColor","App","CardData","cardArrayList","setCardArrayList","cardItem","newArrayList","Object","assign","push","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c5eca21.chunk.js","sourcesContent":["//define action constant\r\nexport const UPDATE_THEME = \"app/UPDATE_THEME\";\r\nexport const RESET_THEME = \"app/RESET_THEME\";\r\n\r\n//definte initial state\r\nexport const initialState = {\r\n  fontFamily: undefined,\r\n  heading:{\r\n    fontColor: undefined,\r\n    fontSize: undefined\r\n  },\r\n  description:{\r\n    fontColor: undefined,\r\n    fontSize: undefined\r\n  },\r\n  card:{\r\n    primary: undefined,\r\n    secondary: undefined,\r\n    tertiary: undefined\r\n  }\r\n};\r\n\r\n//reducer\r\nexport default function reducer(state,action) {\r\n  switch (action.type) {\r\n    case UPDATE_THEME:\r\n      return {\r\n        ...state,\r\n        ...action.config\r\n      };\r\n    case RESET_THEME:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};","//import packages from node modules\r\nimport React,{createContext,useReducer} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport reducer,{initialState,UPDATE_THEME,RESET_THEME} from \"./reducer\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport default function AppProvider(props) {\r\n  const {children} = props;\r\n  const [state,dispatch] = useReducer(reducer,initialState);\r\n\r\n  const actions = {\r\n    updateTheme: config =>{\r\n      dispatch({\r\n        type: UPDATE_THEME,\r\n        config\r\n      });\r\n    },\r\n    resetTheme: () => {\r\n      dispatch({\r\n        type: RESET_THEME\r\n      });\r\n    }\r\n  };\r\n\r\n  return(\r\n      <AppContext.Provider value={{\r\n        state,\r\n        actions\r\n      }}>\r\n        {children}\r\n      </AppContext.Provider>\r\n  );\r\n}\r\n\r\nAppProvider.propTypes= {\r\n  children: PropTypes.any\r\n};\r\n","//import packages from node modules\r\nimport React,{useContext} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {AppContext} from \"../../App/provider\";\r\n\r\n//main component\r\nexport default function Heading ({className,children}){\r\n  const {state} = useContext(AppContext);\r\n  const {fontSize,fontColor} = state.heading;\r\n  return (\r\n      <h1 style={fontSize?{fontSize}:null} className={`${fontColor?fontColor:'text-danger'} ${className?' '+className:''}`}>{children}</h1>\r\n  );\r\n}\r\n\r\nHeading.propType ={\r\n  children: PropTypes.array,\r\n  className: PropTypes.string\r\n};\r\n\r\n\r\n","//import packages from node modules\r\nimport React,{useContext} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport {AppContext} from \"../../App/provider\";\r\n\r\nexport default function Description({className='',children}) {\r\n  const {state} = useContext(AppContext)\r\n  const {fontSize,fontColor} = state.description;\r\n  return (\r\n      <p style={fontSize?{fontSize}:null} className={`${fontColor?fontColor:'text-muted'} ${className?' '+className:''}`}>\r\n        {children}\r\n      </p>\r\n  )\r\n}\r\n\r\nDescription.propType ={\r\n  className: PropTypes.string,\r\n  children: PropTypes.array\r\n};","//import packages from node modules\r\nimport React,{useContext} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//import context\r\nimport {AppContext} from \"../../App/provider\";\r\n\r\nexport default function Card({date,heading,description,link,index}){\r\n\r\n  const {state} = useContext(AppContext);\r\n  const {primary,secondary,tertiary} = state.card;\r\n\r\n  //define private function\r\n  const cardStyleModifier = () =>{\r\n    const columnNo = index % 3;\r\n    const getFlag = () =>{\r\n      switch (columnNo) {\r\n        case 0:\r\n          return `primary${primary?' '+primary:''}`;\r\n        case 1:\r\n          return `secondary${secondary?' '+secondary:''}`;\r\n        case 2:\r\n          return `tertiary${tertiary?' '+tertiary:''}`;\r\n        default:\r\n          return 'primary';\r\n      }\r\n    };\r\n    return `card--${getFlag()}`;\r\n  };\r\n\r\n  return (\r\n      <div className={`col-lg-4 mb-3 card-column`}>\r\n        <div className={`p-4 card ${cardStyleModifier()} d-flex justify-content-between`}>\r\n          <div className={\"card__body\"}>\r\n            <div className={\"card__date text-light font-weight-bold\"}>{date}</div>\r\n            <h6 className=\"card__heading text-light\">{heading}</h6>\r\n            <p className=\"card__description text-light\">{description}</p>\r\n          </div>\r\n          <div className={\"card__footer\"}>\r\n            <a href={link} target={\"_blank\"} rel={\"noopener noreferrer\"} className={\"text-uppercase btn btn-sm btn-outline-light card__read-more font-weight-bold\"}>Read More</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nCard.propType = {\r\n  date: PropTypes.string,\r\n  heading: PropTypes.string,\r\n  description: PropTypes.string,\r\n  index: PropTypes.number,\r\n};\r\n\r\n\r\n","//import node modules\r\nimport React from \"react\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n      <div className=\"d-flex justify-content-center\">\r\n        <div className=\"mx-auto spinner-grow text-danger\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","//import packages from node modules\r\nimport React,{useState,useEffect,useCallback,useRef} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\n//import shared component\r\nimport Loading from \"../Loading\";\r\n\r\nexport default function LoadMore(props){\r\n  //define variables\r\n  const {addCardToArrayCallback} = props;\r\n  const [response,setResponse] =  useState({});\r\n  const prevResponseStatus =  useRef(null);\r\n\r\n  //define callback functions\r\n  const onLoadMoreSuccessCallback = useCallback(()=>{\r\n    if(prevResponseStatus.current !== response.status){\r\n      if( response.status===\"success\" && response.data){\r\n        const {title,body} = response.data;\r\n        const newItem =  {\r\n          \"date\": \"30 Sep, 2018\",\r\n          \"heading\": title,\r\n          \"description\":body,\r\n          \"link\": \"https://www.levo.com.au/blog/robotic-process-automation/\"\r\n        };\r\n        addCardToArrayCallback(newItem);\r\n      }\r\n      prevResponseStatus.current = response.status;\r\n    }\r\n  },[addCardToArrayCallback,prevResponseStatus,response]);\r\n  const buttonOnClick = e => {\r\n    e.preventDefault();\r\n    const randomNumber = ~~(Math.random() * 10) + 1;\r\n    setResponse({\r\n      ...response,\r\n      status: \"loading\"\r\n    });\r\n    axios.get(`https://jsonplaceholder.typicode.com/posts/${randomNumber}`).then(response => {\r\n      setResponse({\r\n        ...response,\r\n        status: \"success\",\r\n        data: response.data,\r\n        error: null\r\n      });\r\n    }, error => {\r\n      setResponse({\r\n        ...response,\r\n        status: \"error\",\r\n        error,\r\n        data: null\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    onLoadMoreSuccessCallback();\r\n  },[onLoadMoreSuccessCallback]);\r\n\r\n  //render\r\n\r\n  if (response.status === 'loading') {\r\n    return (<Loading />);\r\n  }\r\n\r\n  return (\r\n      <button onClick={buttonOnClick} className={\"d-block mx-auto btn btn-sm btn-outline-danger\"}>Read More</button>\r\n  );\r\n\r\n};\r\n\r\nPropTypes.propTypes = {\r\n  addCardToArrayCallback: PropTypes.func\r\n};\r\n\r\n","//import packages from node modules\r\nimport React,{useState,useEffect,useCallback,useRef} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function DropdownList(props) {\r\n  //define variables\r\n  const {value,list,callback,label} = props;\r\n  const [open,setOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n  const prevOpen = useRef(null);\r\n\r\n  //define callback functions\r\n\r\n  const onToggle = () =>{\r\n    setOpen(!open);\r\n  };\r\n\r\n  const clickAwayCallback = useCallback((e)=>{\r\n    if(e.target !== dropdownRef.current && (dropdownRef.current && !dropdownRef.current.contains(e.target))){\r\n      setOpen(false);\r\n    }\r\n  },[dropdownRef]);\r\n\r\n  const onOpenDropdownCallback = useCallback(()=>{\r\n    if(open && !prevOpen.current){\r\n      document.addEventListener(\"click\",clickAwayCallback);\r\n      document.addEventListener(\"touch\",clickAwayCallback);\r\n    }\r\n  },[prevOpen,open,clickAwayCallback]);\r\n\r\n  const onCloseDropdownCallback = useCallback(()=>{\r\n    if(!open && prevOpen.current){\r\n      document.removeEventListener(\"click\",clickAwayCallback);\r\n      document.removeEventListener(\"touch\",clickAwayCallback);\r\n    }\r\n  },[prevOpen,open,clickAwayCallback]);\r\n\r\n  useEffect(()=>{\r\n    if(open !==prevOpen.current) {\r\n      onOpenDropdownCallback();\r\n      onCloseDropdownCallback();\r\n      prevOpen.current = open;\r\n    }\r\n  },[onOpenDropdownCallback,onCloseDropdownCallback,open,prevOpen]);\r\n\r\n  //render\r\n\r\n  const renderList = () => {\r\n    if(list && list.length){\r\n      return list.map((item,index)=><div key={index} className=\"dropdown-item\" onClick={()=>{\r\n        callback(item.value);\r\n        setOpen(false);\r\n      }}>{item.label}</div>)\r\n    }\r\n  }\r\n\r\n  return(\r\n      <div className={`${open? ' show ':''}dropdown m-1`} ref={dropdownRef}>\r\n        <button onClick={onToggle} className=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\"\r\n                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded={open}>\r\n          {label} <strong>{value}</strong>\r\n        </button>\r\n        <div className={`${open? ' show ':''}dropdown-menu`} aria-labelledby=\"dropdownMenuButton\">\r\n          {renderList()}\r\n        </div>\r\n      </div>\r\n  )\r\n};\r\n\r\nDropdownList.propTypes = {\r\n  initial: PropTypes.any,\r\n  list: PropTypes.array,\r\n  callback: PropTypes.func,\r\n  label: PropTypes.string\r\n};","//import packages from node modules\r\n\r\nimport React,{useContext,useState} from \"react\";\r\nimport renderHTML from \"react-render-html\";\r\nimport {AppContext} from \"../../App/provider\";\r\n\r\n//import shared component\r\nimport DropdownList from \"../DropdownList\";\r\n\r\n\r\n//import internals\r\nimport ThemeConfig from \"./config\";\r\n\r\nexport default function ThemeControl(){\r\n  const {state,actions} = useContext(AppContext);\r\n  const [open,setOpen] = useState(true);\r\n\r\n  const onReset = (e) => {\r\n    e.preventDefault();\r\n    actions.resetTheme();\r\n  };\r\n  const onClose = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n  };\r\n\r\n  const onOpen = (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n  };\r\n\r\n\r\n  const renderFontFamilyStyle = ()=>{\r\n    const {fontFamily} = state;\r\n    if(fontFamily){\r\n      return (\r\n          renderHTML(`<style>\r\n            body{\r\n                font-family:${fontFamily}\r\n            }\r\n            </style>`)\r\n      );\r\n    }\r\n    return (<></>);\r\n  };\r\n\r\n  const renderDropdownList = () => {\r\n    return (\r\n        <div className={\"container d-flex flex-wrap justify-content-center\"}>\r\n          <DropdownList\r\n              value={state.fontFamily}\r\n              label={\"Font Family\"}\r\n              list={ThemeConfig.fontFamily}\r\n              callback={(value) => {\r\n                actions.updateTheme({\r\n                  ...state,\r\n                  fontFamily: value\r\n                })\r\n              }}/>\r\n          <DropdownList\r\n              value={state.heading.fontSize}\r\n              label={\"Heading Font Size\"}\r\n              list={ThemeConfig.headingFontSize}\r\n              callback={(value) => {\r\n                actions.updateTheme({\r\n                  ...state,\r\n                  heading: {\r\n                    ...state.heading,\r\n                    fontSize: value\r\n                  }\r\n                })\r\n              }}/>\r\n          <DropdownList\r\n              value={state.heading.fontColor}\r\n              label={\"Heading Font Color\"}\r\n              list={ThemeConfig.fontColor}\r\n              callback={(value) => {\r\n                actions.updateTheme({\r\n                  ...state,\r\n                  heading: {\r\n                    ...state.heading,\r\n                    fontColor: value\r\n                  }\r\n                })\r\n              }}/>\r\n          <DropdownList\r\n              value={state.description.fontSize}\r\n              label={\"Description Font Size\"}\r\n              list={ThemeConfig.descriptionFontSize}\r\n              callback={(value) => {\r\n                actions.updateTheme({\r\n                  ...state,\r\n                  description: {\r\n                    ...state.description,\r\n                    fontSize: value\r\n                  }\r\n                })\r\n              }}/>\r\n          <DropdownList\r\n              value={state.description.fontColor}\r\n              label={\"Description Font Color\"}\r\n              list={ThemeConfig.fontColor}\r\n              callback={(value) => {\r\n                actions.updateTheme({\r\n                  ...state,\r\n                  description: {\r\n                    ...state.description,\r\n                    fontColor: value\r\n                  }\r\n                })\r\n              }}/>\r\n          <DropdownList\r\n              value={state.card.primary}\r\n              label={\"Card Primary\"}\r\n              list={ThemeConfig.cardColor}\r\n              callback={(value) => {\r\n                actions.updateTheme({\r\n                  ...state,\r\n                  card: {\r\n                    ...state.card,\r\n                    primary: value\r\n                  }\r\n                })\r\n              }}/>\r\n          <DropdownList\r\n              value={state.card.secondary}\r\n              label={\"Card Secondary\"}\r\n              list={ThemeConfig.cardColor}\r\n              callback={(value) => {\r\n                actions.updateTheme({\r\n                  ...state,\r\n                  card: {\r\n                    ...state.card,\r\n                    secondary: value\r\n                  }\r\n                })\r\n              }}/>\r\n          <DropdownList\r\n              value={state.card.tertiary}\r\n              label={\"Card Tertiary\"}\r\n              list={ThemeConfig.cardColor}\r\n              callback={(value) => {\r\n                actions.updateTheme({\r\n                  ...state,\r\n                  card: {\r\n                    ...state.card,\r\n                    tertiary: value\r\n                  }\r\n                })\r\n              }}/>\r\n        </div>\r\n    );\r\n  };\r\n\r\n  const renderCTA = ()=> {\r\n    return (\r\n        <div className={\"pb-5 container d-flex flex-wrap justify-content-center\"}>\r\n          <button onClick={onReset} className={\"m-1 btn btn-sm btn-danger\"}>Reset</button>\r\n          <button onClick={onClose} className={\"m-1 btn btn-sm btn-secondary\"}>Close</button>\r\n        </div>\r\n    );\r\n  };\r\n\r\n  if(open){\r\n    return (\r\n        <div className={\"theme-control\"}>\r\n          {renderFontFamilyStyle()}\r\n          {renderDropdownList()}\r\n          {renderCTA()}\r\n        </div>\r\n    );\r\n  }\r\n  return (\r\n      <div className={\"container d-flex flex-wrap justify-content-center\"}>\r\n        <button onClick={onOpen} className={\"btn btn-outline-primary btn-sm\"}>Open Theme Control</button>\r\n      </div>\r\n  );\r\n};","//import packages from node modules\nimport React,{useState,useCallback} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./main.scss\";\n\n//import shared components\nimport Heading from \"../components/Heading\";\nimport Description from \"../components/Description\";\nimport Card from \"../components/Card\";\nimport LoadMore from \"../components/LoadMore\";\nimport ThemeControl from \"../components/ThemeControl\";\n\n//import internals\nimport CardData from \"../data/cards\";\nimport AppProvider from \"./provider\";\n\n//main component\nexport default function App() {\n  //define variables\n  const [cardArrayList,setCardArrayList]  =  useState(CardData.list);\n\n  //define callback functions\n  const addCardToArrayCallback = useCallback(cardItem=>{\n    if(cardArrayList){\n      const newArrayList = Object.assign([],cardArrayList);\n      newArrayList.push(cardItem);\n      setCardArrayList(newArrayList);\n    }\n  },[cardArrayList]);\n\n  //define render functions\n  const renderCards = () =>{\n    if(cardArrayList && cardArrayList.length){\n      return cardArrayList.map((cardItem,index)=>(<Card {...cardItem} index={index} key={index}/>))\n    }\n    return (<></>);\n  };\n\n  //main render\n  return (\n      <AppProvider>\n        <div className=\"app px-5-sm p-5\">\n          <ThemeControl />\n          <div className={\"container pb-3\"}>\n            <div className={\"app__header\"}>\n              <Heading className={\"pb-2\"}>Related Articles</Heading>\n              <Description className={\"pb-2\"}>Lorem ipsum is placeholder text commonly used in the graphic, print, and\n                publishing industries for previewing layouts and visual mockups.</Description>\n            </div>\n          </div>\n          <div className={\"container\"}>\n            <div className={\"row\"}>\n              {renderCards()}\n            </div>\n          </div>\n          <div className={\"container\"}>\n            <LoadMore addCardToArrayCallback={addCardToArrayCallback}/>\n          </div>\n        </div>\n      </AppProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}